// <auto-generated>
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is
// regenerated.
// </auto-generated>

namespace gymlocator.Rest
{
    using Models;
    using System.Threading;
    using System.Threading.Tasks;

    /// <summary>
    /// Extension methods for GymAPI.
    /// </summary>
    public static partial class GymAPIExtensions
    {
            /// <summary>
            /// Get all the gyms for the specified country and language.
            /// </summary>
            /// <remarks>
            /// Will get an array of gyms for the specific country in the specified
            /// language. If no gyms are found, the result will be an empty array.
            /// </remarks>
            /// <param name='operations'>
            /// The operations group for this extension method.
            /// </param>
            /// <param name='locale'>
            /// Language and country specifier for the gyms you want to retrieve. The
            /// format is `{lang}-{country}`, example `/gyms/sv-se`. Note that the locale
            /// is case sensitive.
            /// </param>
            public static object GetGyms(this IGymAPI operations, string locale)
            {
                return operations.GetGymsAsync(locale).GetAwaiter().GetResult();
            }

            /// <summary>
            /// Get all the gyms for the specified country and language.
            /// </summary>
            /// <remarks>
            /// Will get an array of gyms for the specific country in the specified
            /// language. If no gyms are found, the result will be an empty array.
            /// </remarks>
            /// <param name='operations'>
            /// The operations group for this extension method.
            /// </param>
            /// <param name='locale'>
            /// Language and country specifier for the gyms you want to retrieve. The
            /// format is `{lang}-{country}`, example `/gyms/sv-se`. Note that the locale
            /// is case sensitive.
            /// </param>
            /// <param name='cancellationToken'>
            /// The cancellation token.
            /// </param>
            public static async Task<object> GetGymsAsync(this IGymAPI operations, string locale, CancellationToken cancellationToken = default(CancellationToken))
            {
                using (var _result = await operations.GetGymsWithHttpMessagesAsync(locale, null, cancellationToken).ConfigureAwait(false))
                {
                    return _result.Body;
                }
            }

            /// <summary>
            /// Get a specific gym by locale and ID.
            /// </summary>
            /// <remarks>
            /// Will get a specific gym by ID and country/language. If the gym is not found
            /// it will return status 404.
            /// </remarks>
            /// <param name='operations'>
            /// The operations group for this extension method.
            /// </param>
            /// <param name='locale'>
            /// Language and country specifier for the gyms you want to retrieve. The
            /// format is `{lang}-{country}`, example `/gyms/sv-se`. Note that the locale
            /// is case sensitive.
            /// </param>
            /// <param name='gymID'>
            /// Unique identifier for the gym you want to retrieve.
            /// </param>
            public static object GetGym(this IGymAPI operations, string locale, string gymID)
            {
                return operations.GetGymAsync(locale, gymID).GetAwaiter().GetResult();
            }

            /// <summary>
            /// Get a specific gym by locale and ID.
            /// </summary>
            /// <remarks>
            /// Will get a specific gym by ID and country/language. If the gym is not found
            /// it will return status 404.
            /// </remarks>
            /// <param name='operations'>
            /// The operations group for this extension method.
            /// </param>
            /// <param name='locale'>
            /// Language and country specifier for the gyms you want to retrieve. The
            /// format is `{lang}-{country}`, example `/gyms/sv-se`. Note that the locale
            /// is case sensitive.
            /// </param>
            /// <param name='gymID'>
            /// Unique identifier for the gym you want to retrieve.
            /// </param>
            /// <param name='cancellationToken'>
            /// The cancellation token.
            /// </param>
            public static async Task<object> GetGymAsync(this IGymAPI operations, string locale, string gymID, CancellationToken cancellationToken = default(CancellationToken))
            {
                using (var _result = await operations.GetGymWithHttpMessagesAsync(locale, gymID, null, cancellationToken).ConfigureAwait(false))
                {
                    return _result.Body;
                }
            }

    }
}
