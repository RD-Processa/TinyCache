// <auto-generated>
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is
// regenerated.
// </auto-generated>

namespace gymlocator.Rest.Models
{
    using Newtonsoft.Json;
    using System.Linq;

    /// <summary>
    /// The gym is sponsor of an SOS Children's Village project.
    /// </summary>
    public partial class SOSChildrensVillage
    {
        /// <summary>
        /// Initializes a new instance of the SOSChildrensVillage class.
        /// </summary>
        public SOSChildrensVillage()
        {
            CustomInit();
        }

        /// <summary>
        /// Initializes a new instance of the SOSChildrensVillage class.
        /// </summary>
        /// <param name="name">The name of the SOS Barnby that this gym is
        /// sponsor of.</param>
        public SOSChildrensVillage(string name = default(string), Image desktopImage = default(Image), Image mobileImage = default(Image))
        {
            Name = name;
            DesktopImage = desktopImage;
            MobileImage = mobileImage;
            CustomInit();
        }

        /// <summary>
        /// An initialization method that performs custom operations like setting defaults
        /// </summary>
        partial void CustomInit();

        /// <summary>
        /// Gets or sets the name of the SOS Barnby that this gym is sponsor
        /// of.
        /// </summary>
        [JsonProperty(PropertyName = "name")]
        public string Name { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "desktopImage")]
        public Image DesktopImage { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "mobileImage")]
        public Image MobileImage { get; set; }

        /// <summary>
        /// Validate the object.
        /// </summary>
        /// <exception cref="Microsoft.Rest.ValidationException">
        /// Thrown if validation fails
        /// </exception>
        public virtual void Validate()
        {
            if (DesktopImage != null)
            {
                DesktopImage.Validate();
            }
            if (MobileImage != null)
            {
                MobileImage.Validate();
            }
        }
    }
}
