// <auto-generated>
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is
// regenerated.
// </auto-generated>

namespace gymlocator.Rest.Models
{
    using Microsoft.Rest;
    using Newtonsoft.Json;
    using System.Collections;
    using System.Collections.Generic;
    using System.Linq;

    /// <summary>
    /// A kind of group training.
    /// </summary>
    public partial class GroupTrainingType
    {
        /// <summary>
        /// Initializes a new instance of the GroupTrainingType class.
        /// </summary>
        public GroupTrainingType()
        {
            CustomInit();
        }

        /// <summary>
        /// Initializes a new instance of the GroupTrainingType class.
        /// </summary>
        /// <param name="id">A unique lowercase string identifier that will not
        /// change.</param>
        /// <param name="name">Human friendly name of this type of
        /// workout.</param>
        /// <param name="description">A description that will tell a reader
        /// what this group training type is.</param>
        /// <param name="features">An array of features that this group
        /// training type is included in</param>
        public GroupTrainingType(string id, string name = default(string), Image desktopImage = default(Image), Image mobileImage = default(Image), string description = default(string), IList<Feature> features = default(IList<Feature>))
        {
            Id = id;
            Name = name;
            DesktopImage = desktopImage;
            MobileImage = mobileImage;
            Description = description;
            Features = features;
            CustomInit();
        }

        /// <summary>
        /// An initialization method that performs custom operations like setting defaults
        /// </summary>
        partial void CustomInit();

        /// <summary>
        /// Gets or sets a unique lowercase string identifier that will not
        /// change.
        /// </summary>
        [JsonProperty(PropertyName = "id")]
        public string Id { get; set; }

        /// <summary>
        /// Gets or sets human friendly name of this type of workout.
        /// </summary>
        [JsonProperty(PropertyName = "name")]
        public string Name { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "desktopImage")]
        public Image DesktopImage { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "mobileImage")]
        public Image MobileImage { get; set; }

        /// <summary>
        /// Gets or sets a description that will tell a reader what this group
        /// training type is.
        /// </summary>
        [JsonProperty(PropertyName = "description")]
        public string Description { get; set; }

        /// <summary>
        /// Gets or sets an array of features that this group training type is
        /// included in
        /// </summary>
        [JsonProperty(PropertyName = "features")]
        public IList<Feature> Features { get; set; }

        /// <summary>
        /// Validate the object.
        /// </summary>
        /// <exception cref="ValidationException">
        /// Thrown if validation fails
        /// </exception>
        public virtual void Validate()
        {
            if (Id == null)
            {
                throw new ValidationException(ValidationRules.CannotBeNull, "Id");
            }
            if (DesktopImage != null)
            {
                DesktopImage.Validate();
            }
            if (MobileImage != null)
            {
                MobileImage.Validate();
            }
            if (Features != null)
            {
                foreach (var element in Features)
                {
                    if (element != null)
                    {
                        element.Validate();
                    }
                }
            }
        }
    }
}
